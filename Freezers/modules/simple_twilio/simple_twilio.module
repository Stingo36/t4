<?php

/**
 * @file
 * Install and uninstall functions for the simple_twilio module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\simple_twilio\Utility;

/**
 * Implements hook_help().
 */
function simple_twilio_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    case 'help.page.simple_twilio':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Simple Twilio module is used for sent text messages using the <a href=":twilio_link">Twilio</a> SMS service.', [':twilio_link' => 'https://www.twilio.com/sms']) . '</p>';
      $output .= '<dt>' . t('OTP Verification') . '</dt>';
      $output .= '<dd>' . t('Using this module all authenticated users can save their mobile number in site. To avoid invalid or non-authenticate mobile numbers, the module will send an OTP to given number. The number is only saved after completing the OTP verification.') . '</dd>';
      $output .= '<dt>' . t('Send Message to User') . '</dt>';
      $output .= '<dd>' . t('We can send message for all registered users by calling the function <b>simple_twilio_send_sms_user(UID, MESSAGE)</b>) with the unique id of user and message for the user') . '</dd>';
      $output .= '<dt>' . t('Send Message to Number') . '</dt>';
      $output .= '<dd>' . t('We can send message for any valid mobile number by calling the function <b>simple_twilio_send_sms(NUMBER, MESSAGE)</b> with the valid mobile number and message') . '</dd>';
      return $output;

  }
}

/**
 * Implements hook_entity_delete().
 */
function simple_twilio_entity_delete(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'user') {
    Utility::simpleTwilioUserDelete($entity);
  }
}

/**
 * Send message to the Drupal user, Who has already redistered in system.
 *
 * @param int $uid
 *   User Id from System.
 * @param string $message
 *   String Message.
 */
function simple_twilio_send_sms_user($uid, $message) {
  $query = \Drupal::database()->select('simple_twilio_user', 't');
  $query->fields('t', ['status', 'number', 'country']);
  $query->condition('t.uid', $uid);
  $tiwilio = $query->execute()->fetchAssoc();
  $number = $tiwilio['country'] . $tiwilio['number'];

  if (!count($tiwilio)) {
    \Drupal::messenger()->addError(t("User not register in Twilio."));
    return FALSE;
  }
  elseif ($tiwilio['status'] == 1) {
    \Drupal::messenger()->addError(t("User Number not yet confirmed Twilio."));
    return FALSE;
  }
  else {
    Utility::simpleTwilioSendMessage($number, $message);
    return TRUE;
  }
}

/**
 * Send message to the any number.
 *
 * @param int $number
 *   Number with Contry code.
 * @param string $message
 *   String Message.
 */
function simple_twilio_send_sms($number, $message) {
  // Checking number is valid.
  if (!is_numeric($number)) {
    \Drupal::messenger()->addError(t("Number is invalid"));
    return FALSE;
  }
  else {
    Utility::simpleTwilioSendMessage($number, $message);
    return TRUE;
  }
}
